apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-08-19T09:07:36Z"
    generateName: postgresql-5fcb5f77bb-
    labels:
      app: postgresql
      pod-template-hash: 5fcb5f77bb
    name: postgresql-5fcb5f77bb-5xcph
    namespace: postgresql
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: postgresql-5fcb5f77bb
      uid: 8dcdb36e-f464-4939-9173-09c3d22fdb23
    resourceVersion: "642375"
    uid: 27f5d3d6-2ab5-489b-ace9-ff66e9a2c48f
  spec:
    containers:
    - env:
      - name: POSTGRES_DB
        valueFrom:
          configMapKeyRef:
            key: POSTGRES_DB
            name: postgresql-config
      - name: POSTGRES_USER
        valueFrom:
          configMapKeyRef:
            key: POSTGRES_USER
            name: postgresql-config
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: POSTGRES_PASSWORD
            name: postgresql-secret
      - name: PGDATA
        value: /var/lib/postgresql/data/pgdata
      image: postgres:15
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgresql-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-458sn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: contest-53-node-w-6754
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: postgresql-storage
      persistentVolumeClaim:
        claimName: postgresql-pvc
    - name: kube-api-access-458sn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-19T09:08:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-19T09:07:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-19T09:08:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-19T09:08:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-19T09:07:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d386d8e8a672108c37c6c46b191cf11fb4ccc8ed8d76c2075ed67b3865fc716
      image: docker.io/library/postgres:15
      imageID: docker.io/library/postgres@sha256:bc51cf4f1fe02cce7ed2370b20128a9b00b4eb804573a77d2a0d877aaa9c82b1
      lastState: {}
      name: postgresql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-19T09:08:31Z"
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgresql-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-458sn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.16.1.14
    hostIPs:
    - ip: 172.16.1.14
    phase: Running
    podIP: 198.18.0.133
    podIPs:
    - ip: 198.18.0.133
    qosClass: Burstable
    startTime: "2025-08-19T09:07:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"postgresql"},"name":"postgresql-service","namespace":"postgresql"},"spec":{"ports":[{"name":"postgresql","port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"app":"postgresql"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-19T09:07:42Z"
    labels:
      app: postgresql
    name: postgresql-service
    namespace: postgresql
    resourceVersion: "642021"
    uid: cf88444b-c35b-430a-ad99-267063009bb9
  spec:
    clusterIP: 198.19.163.47
    clusterIPs:
    - 198.19.163.47
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"postgresql"},"name":"postgresql","namespace":"postgresql"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgresql"}},"template":{"metadata":{"labels":{"app":"postgresql"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_DB","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_DB","name":"postgresql-config"}}},{"name":"POSTGRES_USER","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_USER","name":"postgresql-config"}}},{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"POSTGRES_PASSWORD","name":"postgresql-secret"}}},{"name":"PGDATA","value":"/var/lib/postgresql/data/pgdata"}],"image":"postgres:15","livenessProbe":{"exec":{"command":["/bin/sh","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]},"initialDelaySeconds":30,"periodSeconds":10},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]},"initialDelaySeconds":5,"periodSeconds":5},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"250m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgresql-storage"}]}],"volumes":[{"name":"postgresql-storage","persistentVolumeClaim":{"claimName":"postgresql-pvc"}}]}}}}
    creationTimestamp: "2025-08-19T09:07:35Z"
    generation: 1
    labels:
      app: postgresql
    name: postgresql
    namespace: postgresql
    resourceVersion: "642379"
    uid: c2c98443-5176-4ea2-8a0f-93726c80f9be
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgresql
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_DB
                name: postgresql-config
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_USER
                name: postgresql-config
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: postgresql-secret
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          image: postgres:15
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresql-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-19T09:08:38Z"
      lastUpdateTime: "2025-08-19T09:08:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-19T09:07:36Z"
      lastUpdateTime: "2025-08-19T09:08:38Z"
      message: ReplicaSet "postgresql-5fcb5f77bb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-19T09:07:36Z"
    generation: 1
    labels:
      app: postgresql
      pod-template-hash: 5fcb5f77bb
    name: postgresql-5fcb5f77bb
    namespace: postgresql
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgresql
      uid: c2c98443-5176-4ea2-8a0f-93726c80f9be
    resourceVersion: "642378"
    uid: 8dcdb36e-f464-4939-9173-09c3d22fdb23
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgresql
        pod-template-hash: 5fcb5f77bb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgresql
          pod-template-hash: 5fcb5f77bb
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_DB
                name: postgresql-config
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_USER
                name: postgresql-config
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: postgresql-secret
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          image: postgres:15
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresql-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
